# Generated by Django 5.2 on 2025-05-04 05:23

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Barangay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('population', models.IntegerField()),
                ('area_sqkm', models.FloatField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'verbose_name_plural': 'Barangays',
            },
        ),
        migrations.CreateModel(
            name='FloodRiskZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('severity_level', models.IntegerField(choices=[(1, 'Low Risk'), (2, 'Medium Risk'), (3, 'High Risk'), (4, 'Severe Risk'), (5, 'Extreme Risk')])),
                ('description', models.TextField(blank=True, null=True)),
                ('geojson', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('sensor_type', models.CharField(choices=[('temperature', 'Temperature'), ('humidity', 'Humidity'), ('rainfall', 'Rainfall'), ('water_level', 'Water Level'), ('wind_speed', 'Wind Speed')], max_length=50)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('role', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('barangay', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='emergency_contacts', to='core.barangay')),
            ],
        ),
        migrations.CreateModel(
            name='FloodAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('severity_level', models.IntegerField(choices=[(1, 'Advisory'), (2, 'Watch'), (3, 'Warning'), (4, 'Emergency'), (5, 'Catastrophic')])),
                ('active', models.BooleanField(default=True)),
                ('predicted_flood_time', models.DateTimeField(blank=True, null=True)),
                ('issued_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('affected_barangays', models.ManyToManyField(related_name='flood_alerts', to='core.barangay')),
                ('issued_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-issued_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email'), ('app', 'App Notification')], max_length=20)),
                ('recipient', models.CharField(max_length=100)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('delivered', 'Delivered')], default='pending', max_length=20)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='core.floodalert')),
            ],
            options={
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='SensorData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='readings', to='core.sensor')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ThresholdSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.CharField(choices=[('temperature', 'Temperature'), ('humidity', 'Humidity'), ('rainfall', 'Rainfall'), ('water_level', 'Water Level'), ('wind_speed', 'Wind Speed')], max_length=50)),
                ('advisory_threshold', models.FloatField()),
                ('watch_threshold', models.FloatField()),
                ('warning_threshold', models.FloatField()),
                ('emergency_threshold', models.FloatField()),
                ('catastrophic_threshold', models.FloatField()),
                ('unit', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('parameter',)},
            },
        ),
    ]
