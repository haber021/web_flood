# Generated by Django 5.2 on 2025-05-04 11:20

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0004_userprofile'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ResilienceScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('infrastructure_score', models.IntegerField(help_text='Score for infrastructure preparedness (0-100)')),
                ('social_capital_score', models.IntegerField(help_text='Score for community cohesion and social capital (0-100)')),
                ('institutional_score', models.IntegerField(help_text='Score for institutional capacity and governance (0-100)')),
                ('economic_score', models.IntegerField(help_text='Score for economic resources and recovery capacity (0-100)')),
                ('environmental_score', models.IntegerField(help_text='Score for environmental protection and natural buffers (0-100)')),
                ('overall_score', models.FloatField(help_text='Overall weighted resilience score (0-100)')),
                ('resilience_category', models.CharField(choices=[('very_low', 'Very Low Resilience'), ('low', 'Low Resilience'), ('moderate', 'Moderate Resilience'), ('high', 'High Resilience'), ('very_high', 'Very High Resilience')], help_text='Category interpretation of the overall score', max_length=20)),
                ('recommendations', models.TextField(blank=True, help_text='Suggestions for improving resilience', null=True)),
                ('assessment_date', models.DateField(default=django.utils.timezone.now)),
                ('valid_until', models.DateField(blank=True, help_text='Date when reassessment is recommended', null=True)),
                ('methodology', models.CharField(default='Standard Assessment', help_text='Assessment methodology used', max_length=100)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_current', models.BooleanField(default=True, help_text='Whether this is the most current assessment')),
                ('assessed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resilience_assessments', to=settings.AUTH_USER_MODEL)),
                ('barangay', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resilience_scores', to='core.barangay')),
                ('municipality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resilience_scores', to='core.municipality')),
            ],
            options={
                'verbose_name': 'Community Resilience Score',
                'verbose_name_plural': 'Community Resilience Scores',
                'ordering': ['-assessment_date'],
            },
        ),
    ]
